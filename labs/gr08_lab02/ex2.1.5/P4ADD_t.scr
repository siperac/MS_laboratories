##############################################################
#SCRIPT FOR SPEEDING UP and RECORDING the ADDER SYNTHESIS#
# analyzing and checking vhdl netlist#
# here the analyze command is used for each file from bottom to top #
##############################################################
# fill these lines with your files ...
analyze -library WORK -format vhdl {./syn/fa.vhd}
analyze -library WORK -format vhdl {./syn/carry_generator.vhd}
analyze -library WORK -format vhdl {./syn/p4_adder.vhd}
analyze -library WORK -format vhdl {./syn/carry_select_block.vhd}
analyze -library WORK -format vhdl {./syn/G.vhd}
analyze -library WORK -format vhdl {./syn/PG.vhd}
analyze -library WORK -format vhdl {./syn/mux21_generic.vhd}
analyze -library WORK -format vhdl {./syn/rca.vhd}
analyze -library WORK -format vhdl {./syn/sum_generator.vhd}
##############################################################
# elaborating the top entity -- here supposed P4ADD#
# choose the architecture you want
elaborate P4_ADDER -architecture STRUCTURAL 
##########################################
# first compilation, without constraints #
compile -exact_map
# reporting riming and power after the first synthesis without constraints #
report_timing -nworst 10 > ./reports/opt/P4ADD_timeopt_1t.rpt
report_area > ./reports/opt/P4ADD_timeopt_1a.rpt
# forces a combinational max delay of REQUIRED_TIME from each of the inputs
# to each of th eoutput, that is a delay lower than the one found after
# the first compilation step #
# often this is the working clock period of your system #
set_max_delay 0.52 -from [all_inputs] -to [all_outputs]
# optimize
compile -map_effort high
# save report
report_timing -nworst 10 > ./reports/high_opt/P4ADD_timeopt_2t.rpt
report_area > ./reports/high_opt/P4ADD_timeopt_2a.rpt
# saving files
write -hierarchy -format ddc -output ./syn/post_syn/P4ADD-structural-topt.ddc
write -hierarchy -format vhdl -output ./syn/post_syn/P4ADD-structural-topt.vhdl
write -hierarchy -format verilog -output ./syn/P4ADD-structural-topt.v
